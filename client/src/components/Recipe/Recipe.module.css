
.container{
  background: #fff2d6;
}
.page {
  box-sizing: border-box;
  text-align: center;
  width: 100%;
  max-width: 480px;
  margin: auto;
  padding: 1.3rem;
  display: grid;
  border: 5px solid #941f29;
  background: #fc827a;
  color: #941f29
}

.error {
  /* border: solid 1px red; */
  color: red;
}

.error_p {
  color: red;
  font-size: .9em;
}

.head {
  display: flex;
  align-items: center;
}
.tittle{
  color: #941f29;
  text-shadow: 2px 1px 2px white;
}

.select {
  padding: 1.5vh;
  height: 100%;
  width: 50%;
  border: none;
  background-color: #ffffff;
  border-radius: 1.2vh;
  /* needed */
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none; 
  /* SVG background image */
  background-image: url("data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%2212%22%20height%3D%2212%22%20viewBox%3D%220%200%2012%2012%22%3E%3Ctitle%3Edown-arrow%3C%2Ftitle%3E%3Cg%20fill%3D%22%23000000%22%3E%3Cpath%20d%3D%22M10.293%2C3.293%2C6%2C7.586%2C1.707%2C3.293A1%2C1%2C0%2C0%2C0%2C.293%2C4.707l5%2C5a1%2C1%2C0%2C0%2C0%2C1.414%2C0l5-5a1%2C1%2C0%2C1%2C0-1.414-1.414Z%22%20fill%3D%22%23000000%22%3E%3C%2Fpath%3E%3C%2Fg%3E%3C%2Fsvg%3E");
  background-size: .6em;
  background-position: calc(100% - 1.3em) center;
  background-repeat: no-repeat;
  color: #941f29;
}

.select::-ms-expand {
  display: none;
  color: #941f29;
}

.btnX {
  display: inline-block;
  padding: 0.1em 0.1em;
  font-size: 16px;
  font-weight: 700;
  color: white;
  border: 3px solid rgb(252, 70, 100);
  background-color: rgb(252, 70, 100);
  cursor: pointer;
  position: relative;
  text-decoration: none;
  overflow: hidden;
  z-index: 1;
  font-family: inherit;
  height: 100%;
  border-radius: 50%;
}

.btnX::before {
  content: "";
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background-color: rgb(190, 15, 15);
  transform: translateX(-100%);
  transition: all .3s;
  z-index: -1;
}

.btnX:hover::before {
  transform: translateX(0);
}

.container_diets{
  display: flex;
  align-items: center;
  justify-content: space-evenly;
}

.btn {
  position: relative;
  font-size: 17px;
  text-transform: uppercase;
  text-decoration: none;
  padding: 1em 2.5em;
  display: inline-block;
  border-radius: 6em;
  transition: all .2s;
  border: none;
  font-family: inherit;
  font-weight: 500;
  background-color: #fc827a;
  margin: 2vh;
  color: #ffffff;
}

.btn:hover {
  transform: translateY(-3px);
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
}

.btn:active {
  transform: translateY(-1px);
  box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
}

.btn::after {
  content: "";
  display: inline-block;
  height: 100%;
  width: 100%;
  border-radius: 100px;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: all .4s;
}

.btn::after {
  background-color: #fff;
}

.btn:hover::after {
  transform: scaleX(1.4) scaleY(1.6);
  opacity: 0;
}

.ha_screen_reader {
  width: var(--ha-screen-reader-width, 1px);
  height: var(--ha-screen-reader-height, 1px);
  padding: var(--ha-screen-reader-padding, 0);
  border: var(--ha-screen-reader-border, none);

  position: var(--ha-screen-reader-position, absolute);
  clip: var(--ha-screen-reader-clip, rect(1px, 1px, 1px, 1px));
  overflow: var(--ha-screen-reader-overflow, hidden);
}

.field__input {
  --uiFieldPlaceholderColor: var(--fieldPlaceholderColor, #fc827a);

  background-color: #fff;
  border-radius: 0;
  border: none;
  border-radius: 2%;
  font-family: inherit;
  font-size: inherit;
}

.field__input:focus::-webkit-input-placeholder {
  color: var(--uiFieldPlaceholderColor);
}

.field__input:focus::-moz-placeholder {
  color: var(--uiFieldPlaceholderColor);
}

.field {
  --uiFieldBorderWidth: var(--fieldBorderWidth, 2px);
  --uiFieldPaddingRight: var(--fieldPaddingRight, 1rem);
  --uiFieldPaddingLeft: var(--fieldPaddingLeft, 1rem);
  --uiFieldBorderColorActive: var(--fieldBorderColorActive, rgba(22, 22, 22, 1));
  display: var(--fieldDisplay, inline-flex);
  position: relative;
  font-size: var(--fieldFontSize, 1rem);
  margin: 1.5vh;
}

.field__input {
  box-sizing: border-box;
  width: var(--fieldWidth, 100%);
  height: 66px;
  padding: var(--fieldPaddingTop, 1.25rem) var(--uiFieldPaddingRight) var(--fieldPaddingBottom, .5rem) var(--uiFieldPaddingLeft);
  border-bottom: var(--uiFieldBorderWidth) solid var(--fieldBorderColor, rgba(0, 0, 0, .25));
}

.field__input:focus {
  outline: none;
}

.field__input::-webkit-input-placeholder {
  opacity: 0;
  transition: opacity .2s ease-out;
}

.field__input::-moz-placeholder {
  opacity: 0;
  transition: opacity .2s ease-out;
}

.field__input:focus::-webkit-input-placeholder {
  opacity: 1;
  transition-delay: .2s;
}

.field__input:focus::-moz-placeholder {
  opacity: 1;
  transition-delay: .2s;
}

.field__label_wrap {
  box-sizing: border-box;
  pointer-events: none;
  cursor: text;

  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

.field__label_wrap::after {
  content: "";
  box-sizing: border-box;
  width: 100%;
  height: 0;
  opacity: 0;

  position: absolute;
  bottom: 0;
  left: 0;
}

.field__input:focus~.field__label_wrap::after {
  opacity: 1;
}

.field__label {
  position: absolute;
  left: var(--uiFieldPaddingLeft);
  top: calc(50% - .5em);

  line-height: 1;
  font-size: var(--fieldHintFontSize, inherit);

  transition: top .2s cubic-bezier(0.9, -0.15, 0.1, 1.15), opacity .2s ease-out, font-size .2s ease-out;
}

.field__input:focus~.field__label_wrap .field__label,
.field__input:not(:placeholder-shown)~.field__label_wrap .field__label {
  --fieldHintFontSize: var(--fieldHintFontSizeFocused, .75rem);

  top: var(--fieldHintTopHover, .25rem);
}

.field_v1 .field__label_wrap::after {
  border-bottom: var(--uiFieldBorderWidth) solid var(--uiFieldBorderColorActive);
  transition: opacity .2s ease-out;
}

.field {
  --fieldBorderColor: #ffffff;
  --fieldBorderColorActive: #941f29;
}
.color{
  background: #941f29;
}